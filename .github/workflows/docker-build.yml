name: Build and Release Alpine Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    # Allows manual triggering of the workflow
    inputs:
      version:
        description: 'Image version'
        required: true
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker Image
      run: |
        docker build --tag your-docker-repo/alpine-nmap-python:${{ github.event.inputs.version }} .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push your-docker-repo/alpine-nmap-python:${{ github.event.inputs.version }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        echo "Release ${{ github.event.inputs.version }} published!"
