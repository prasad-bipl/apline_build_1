name: Build, Tag, and Release Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Get the current version from the VERSION file
    - name: Get current version
      id: get_version
      run: |
        VERSION=$(cat VERSION)
        echo "Current version: $VERSION"
        echo "::set-output name=version::$VERSION"

    # Increment the version (patch version bump)
    - name: Increment version
      id: increment_version
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        echo "Current version is: $VERSION"

        # Split the version into major, minor, and patch
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        PATCH=$((PATCH+1))  # Increment the patch version

        # Combine new version
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"
        echo "$NEW_VERSION" > VERSION  # Update the VERSION file
        echo "::set-output name=new_version::$NEW_VERSION"

    # Commit the new version to the repository using GHCR_PAT
    - name: Commit new version
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin https://$GHCR_PAT@github.com/${{ github.repository }}.git
        git add VERSION
        git commit -m "Bump version to ${{ steps.increment_version.outputs.new_version }}"
        git push origin main
      env:
        GHCR_PAT: ${{ secrets.GHCR_PAT }}

    # Build Docker Image with the new version
    - name: Build Docker Image
      run: |
        NEW_VERSION=${{ steps.increment_version.outputs.new_version }}
        docker build --tag ghcr.io/${{ github.repository }}/alpine-nmap-python:$NEW_VERSION .

    - name: Push Docker Image to GitHub Container Registry
      run: |
        NEW_VERSION=${{ steps.increment_version.outputs.new_version }}
        docker push ghcr.io/${{ github.repository }}/alpine-nmap-python:$NEW_VERSION

    # Push the new tag to the repo using GHCR_PAT
    - name: Tag new version and push
      run: |
        NEW_VERSION=${{ steps.increment_version.outputs.new_version }}
        git tag $NEW_VERSION
        git push origin $NEW_VERSION
      env:
        GHCR_PAT: ${{ secrets.GHCR_PAT }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Create a GitHub release for the new version
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}  # Use GHCR_PAT for creating the release
      with:
        tag_name: ${{ steps.increment_version.outputs.new_version }}  # Set the tag name
        release_name: Release ${{ steps.increment_version.outputs.new_version }}
        draft: false
        prerelease: false
