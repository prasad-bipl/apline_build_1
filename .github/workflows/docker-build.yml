name: Build, Tag, and Release Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Get the latest tag
      id: get_tag
      run: |
        # Fetch tags and extract the latest tag
        git fetch --tags
        TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $TAG"
        echo "::set-output name=latest_tag::$TAG"

    - name: Increment the version tag
      id: increment_tag
      run: |
        LATEST_TAG=${{ steps.get_tag.outputs.latest_tag }}
        echo "Latest tag is: $LATEST_TAG"
        
        # Parse the latest version and increment the patch number
        VERSION="${LATEST_TAG//v/}"
        IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
        PATCH_VERSION=$((VERSION_PARTS[2]+1))
        NEW_TAG="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
        echo "New tag will be: $NEW_TAG"
        echo "::set-output name=new_tag::$NEW_TAG"

    - name: Build Docker Image
      run: |
        NEW_TAG=${{ steps.increment_tag.outputs.new_tag }}
        docker build --tag ghcr.io/${{ github.repository }}/alpine-nmap-python:$NEW_TAG .

    - name: Push Docker Image to GitHub Container Registry
      run: |
        NEW_TAG=${{ steps.increment_tag.outputs.new_tag }}
        docker push ghcr.io/${{ github.repository }}/alpine-nmap-python:$NEW_TAG

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Push the new tag to the repo using GHCR_PAT
      run: |
        NEW_TAG=${{ steps.increment_tag.outputs.new_tag }}
        git tag $NEW_TAG
        git push origin $NEW_TAG
      env:
        GITHUB_PAT: ${{ secrets.GHCR_PAT }}  # Use GHCR_PAT to push tags

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Create Release using GHCR_PAT
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}  # Use GHCR_PAT for creating the release
      with:
        tag_name: ${{ steps.increment_tag.outputs.new_tag }}
        release_name: Release ${{ steps.increment_tag.outputs.new_tag }}
        draft: false
        prerelease: false
#done
